// <auto-generated />
using System;
using MVCFaculty.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCFaculty.Migrations
{
    [DbContext(typeof(MVCFacultyContext))]
    [Migration("20200428143605_CoursesTeachersStudents")]
    partial class CoursesTeachersStudents
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCFaculty.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Credits");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(25);

                    b.Property<int?>("FirstTeacherId");

                    b.Property<string>("Programme")
                        .HasMaxLength(100);

                    b.Property<int?>("SecondTeacherId");

                    b.Property<int>("Semester");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("FirstTeacherId");

                    b.HasIndex("SecondTeacherId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("MVCFaculty.Models.Enrollment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdditionalPoints");

                    b.Property<int>("CourseId");

                    b.Property<int?>("ExamPoints");

                    b.Property<DateTime?>("FinishDate");

                    b.Property<int?>("Grade");

                    b.Property<int?>("ProjectPoints");

                    b.Property<string>("ProjectUrl")
                        .HasMaxLength(255);

                    b.Property<string>("Semester")
                        .HasMaxLength(10);

                    b.Property<int?>("SeminalPoints");

                    b.Property<string>("SeminalUrl")
                        .HasMaxLength(255);

                    b.Property<int>("StudentId");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");
                });

            modelBuilder.Entity("MVCFaculty.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcquiredCredits");

                    b.Property<int?>("CurrentSemester");

                    b.Property<string>("EducationLevel")
                        .HasMaxLength(25);

                    b.Property<DateTime?>("EnrollmentDate");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("MVCFaculty.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcademicRank")
                        .HasMaxLength(25);

                    b.Property<string>("Degree")
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("HireDate");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("OfficeNumber")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("MVCFaculty.Models.Course", b =>
                {
                    b.HasOne("MVCFaculty.Models.Teacher", "FirstTeacher")
                        .WithMany("CoursesFirst")
                        .HasForeignKey("FirstTeacherId");

                    b.HasOne("MVCFaculty.Models.Teacher", "SecondTeacher")
                        .WithMany("CoursesSecond")
                        .HasForeignKey("SecondTeacherId");
                });

            modelBuilder.Entity("MVCFaculty.Models.Enrollment", b =>
                {
                    b.HasOne("MVCFaculty.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MVCFaculty.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
